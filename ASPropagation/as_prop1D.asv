clear all
close all
clc

t0 = cputime;

%% Vaccum Wavelength

lambda0_um = 0.67;
lambda0 = lambda0_um*1e-6;

%% Materials

gold_refr_idx_table = readtable("gold.txt");
lambda_gold = gold_refr_idx_table.lambda;
n_gold = gold_refr_idx_table.n;
k_gold = gold_refr_idx_table.k;

water_refr_idx_table = readtable("water.txt");
lambda_water = water_refr_idx_table.lambda;
n_water = water_refr_idx_table.n;
k_water = water_refr_idx_table.k;

% N-BK7
n1 = sqrt(...
    1+1.03961212./(1 - 0.00600069867./lambda0_um.^2) + ...
    0.231792344./(1 - 0.0200179144./lambda0_um.^2) + ...
    1.01046945./(1 - 103.560653./lambda0_um.^2) ...
);

% Gold
n2 = spline(lambda_gold, n_gold, lambda0_um) + ...
    1j*spline(lambda_gold, k_gold, lambda0_um);

% Water
n3 = spline(lambda_water, n_water, lambda0_um) + ...
    1j*spline(lambda_water, k_water, lambda0_um);

% thickness of gold layer
d_tf = 50e-9;

%% Laser (defined at the substrate)

theta0 = 5/180*pi;
lambda1 = lambda0/n1;

k = 2*pi/lambda1;

w0 = lambda1/(pi*theta0);
z0 = lambda1/(pi*theta0^2);

%% Angular Spectrum Propagation

s = linspace(-.5e-3, .5e-3, 2^20);
dz = d_tf/10;

%%
theta = 68/180*pi;

x = s*cos(theta);
z = -s*sin(theta);

U = 100*gb_complex_amplitude(x, z, k, w0, z0);

[Ai1, fs] = angular_spectrum(U, s);

% ignore evanescent fields
Ai1  = Ai1(abs(fs*lambda1) <= 1);
fs = fs(abs(fs*lambda1) <= 1);
ang = real(asin(fs*lambda1));

%%
% angular spectrum propagation transfer function.
H_as = @(fx, z) exp(1j*2*pi*z*sqrt((1/lambda1^2) - fx.^2));

% Angular Spectra at 1 - 2 interface
[rp1, tp1, ~] = fresnel_coefficients_p(ang, n1, n2, n3, d_tf, lambda0);
Ar1 = Ai1.*rp1;
At1 = Ai1.*tp1;

z1 = ((-40e-6):dz:0)';
A1 = H_as(fs, z1).*Ai1 + H_as(fs, -z1).*Ar1;

% Angular Spectra at 2 - 3 interface
[rp2, tp2, ~] = fresnel_coefficients_p(ang, n2, n2, n3, d_tf, lambda0);
Ai2 = H_as(fs, d_tf).*At1;
Ar2 = Ai2.*rp2;
At2 = Ai2.*tp2;

z2 = (0:dz:d_tf)';
A2 = H_as(fs, -z2).*Ai2 + H_as(fs, z2).*Ar2;

% Angular spectra at the analyte
z3 = (d_tf:dz:(d_tf + 10e-6))';
A3 = H_as(fs, z3 - d_tf).*At2;

At = [A1;A2;A3];
zt = [z1;z2;z3];

[Ut, sp] = i_angular_spectrum(At, fs);

execution_time = cputime - t0

[m, n] = size(Ut);

figure(Position=[150,150,1500,300])
imagesc(-1e6*sp, -1e6*zt, abs(Ut))
hold on
line([min(sp) max(sp)], [, 'Color', 'red', 'LineStyle', '-');
% line([0, n-1], find(zt==d_tf, 1)*[1,1], 'r');
title(['$|E_{xz}|$ ($\lambda=',num2str(lambda0_um,2),...
    '\mu$m, $\theta = ',num2str(theta/pi*180,2),'$deg, ',...
    '$\theta_{||}=',num2str(theta0/pi*180),'$deg)'],...
    Interpreter='latex', FontSize=16)
xlim(30*[-1, 1])
xlabel('x($\mu$m)', Interpreter='latex', FontSize=16)
ylabel('z($\mu$m)', Interpreter='latex', FontSize=16);
axis equal
colorbar

%% Functions

function U = gb_complex_amplitude(x, z, k, w0, z0)

w = w0*sqrt(1 + (z/z0).^2);

if z ~= 0
    R = z.*(1 + (z0./z).^2);
    eta = atan(z/z0);
    
    phi = k*z + k*x.^2./(2*R) - eta;
else
    phi = 0;
end

U = w0./w.*exp(-x.^2./w.^2).*exp(-1j*phi);

end

function [rp, tp, ap] = fresnel_coefficients_p(theta_i, n1, n2, n3, dk, lambda0)

qk = @(n1, nk) sqrt(nk^2 - n1^2*sin(theta_i).^2)/nk^2;

q1 = qk(n1, n1);

q2 = qk(n1, n2);
q3 = qk(n1, n3);

beta_2 = (2*pi*dk/lambda0)*sqrt(n2^2 - n1^2*sin(theta_i).^2);

m11 = cos(beta_2);
m12 = -1j*sin(beta_2)./q2;
m21 = -1j*q2.*sin(beta_2);
m22 = cos(beta_2);

a = (m11 + m12.*q3);
b = (m21 + m22.*q3);

c = a.*q1 + b;
d = a.*q1 - b;

rp = d./c;
tp = 2*q1./c;
ap = 4*q1.*real(a.*conj(b) - q3)./(c.*conj(c));

end

function [A, fx] = angular_spectrum(U, x)

Fs = 1/mean(diff(x));
L = 2^nextpow2(length(x));

A  = fft(U, L, 2)/L;
fx = (Fs/L)*[0,(1:L/2),-(1:L/2)];

end

function [U, x] = i_angular_spectrum(A, fx)

dx = 1/mean(diff(fx));
L = 2^nextpow2(length(fx));

U = ifft(A*length(fx), L, 2);
x = (dx/L)*(-L/2:L/2-1);

end

