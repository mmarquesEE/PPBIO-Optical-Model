function E = rtmm_tm_efield(E_TM, theta, z, n, d, lambda0)
% All vector inputs must be column vectors

N_phases = length(n);
N_theta = length(theta);
N_z = length(z);

d_lim = [-Inf; cumsum(d(1:(end-1))); Inf];
d_ext = [0; cumsum(d(1:(end-1)))];

E = zeros(N_z, N_theta);

for j = 1:N_theta
    M = eye(2);
    M_ac = zeros(2,2,N_phases);
    q = zeros(N_phases,1);
    xi= zeros(N_phases,1);

    for i = N_phases:-1:1
        xi(i) = sqrt(n(i)^2 - n(1)^2*sin(theta(j))^2);
        q(i) = xi(i)/n(i)^2;
        beta = (2*pi/lambda0)*d(i)*xi(i);

        M = [
            cos(beta), -1j/q(i)*sin(beta);
            -1j*q(i)*sin(beta), cos(beta);
        ]*M;

        M_ac(:,:,i) = M;
    end

    tH = 2*q(1)/((M(1,1) + M(1,2)*q(end))*q(1) + (M(2,1) + M(2,2)*q(end)));
    QN1= [tH; -q(end)*tH]*E_TM(j);
    
    E_temp = [];
    for i = 1:N_phases
        dz = z((z >= d_lim(i)) & (z < d_lim(i+1))) - d_ext(i);
        N  = @(dz) [ ...
            cos((2*pi/lambda0)*xi(i)*dz), 1j/q(i)*sin((2*pi/lambda0)*xi(i)*dz); ...
            1j*q(i)*sin((2*pi/lambda0)*xi(i)*dz), cos((2*pi/lambda0)*xi(i)*dz);
        ];
        E_temp = [E_temp; arrayfun(@(dz) [0,1]*N(dz)*M_ac(:,:,i)*QN1, dz)];
    end

    E(:,j) = E_temp;
end
end